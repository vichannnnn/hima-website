name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: vichannnnn/hima-website

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CICD_TOKEN }}


      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/hima-website:latest


  authenticate:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate
        env:
          API_USERNAME: ${{ secrets.API_USERNAME }}
          API_PASSWORD: ${{ secrets.API_PASSWORD }}
        run: |
          RESPONSE=$(curl -s -X POST "https://api.lambda.himaa.me/api/v1/login" \
          -H "Content-Type: application/json" \
          -d '{"username": "${{ env.API_USERNAME }}", "password": "${{ env.API_PASSWORD }}"}')

          BODY=$(echo $RESPONSE | jq -r '.body')
          JWT_TOKEN=$(echo $BODY | jq -r '.access_token')
          echo "JWT_TOKEN=$JWT_TOKEN" > jwt.env

      - name: Upload JWT Token as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: jwt-token
          path: jwt.env

  deploy:
    needs: authenticate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download JWT Token
        uses: actions/download-artifact@v2
        with:
          name: jwt-token
          path: .

      - name: deploy
        run: |
          source jwt.env
          curl -X POST "https://api.lambda.himaa.me/api/v1/deploy" \
          -H "authorization: Bearer $JWT_TOKEN" \
          -H "Content-Type: application/json" \
          -d '${{ secrets.DEPLOY_PAYLOAD }}'
